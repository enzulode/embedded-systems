volumes:
  cards-db-volume: {}
  keycloak-db-volume: {}

services:
  cards-db:
    image: bitnami/postgresql:17.0.0
    environment:
      POSTGRESQL_DATABASE: cards
      POSTGRESQL_USERNAME: dev
      POSTGRESQL_PASSWORD: dev
    volumes:
      - cards-db-volume:/bitnami/postgresql
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U dev' ]
      interval: 5s
      timeout: 5s
      retries: 3

  keycloak-db:
    hostname: keycloak-db
    image: bitnami/postgresql:17.0.0
    environment:
      POSTGRESQL_DATABASE: keycloak
      POSTGRESQL_USERNAME: dev
      POSTGRESQL_PASSWORD: dev
    volumes:
      - keycloak-db-volume:/bitnami/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dev" ]
      interval: 5s
      timeout: 5s
      retries: 3

  keycloak-idp:
    depends_on:
      keycloak-db:
        condition: service_healthy

    image: bitnami/keycloak:26.1.0
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: enzulode
      KC_BOOTSTRAP_ADMIN_PASSWORD: dev
      KEYCLOAK_HTTP_PORT: 9000
      KEYCLOAK_HTTPS_PORT: 9443
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_HOST: keycloak-db
      KEYCLOAK_DATABASE_NAME: keycloak
      KEYCLOAK_DATABASE_USER: dev
      KEYCLOAK_DATABASE_PASSWORD: dev
    ports:
      - '9000:9000'

  backend:
    image: embedded-backend:v1.0.0
    depends_on:
      cards-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWK_SET_URI: http://keycloak-idp:9000/realms/devrealm/protocol/openid-connect/certs
      PG_URL: jdbc:postgresql://cards-db:5432/cards
      PG_USERNAME: dev
      PG_PASSWORD: dev
    ports:
      - '8888:8888'

  frontend:
    depends_on:
      - backend
    build:
      context: frontend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - '8080:80'